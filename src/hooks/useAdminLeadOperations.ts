
import { useAdminCheck } from './useAdminCheck';
import { useAdminClinicOperations } from './useAdminClinicOperations';
import { useClinicaOperations } from './useClinicaOperations';

/**
 * Hook unificado para opera√ß√µes de leads (admin e usu√°rio normal)
 * 
 * O que faz:
 * - Detecta automaticamente se √© admin ou usu√°rio normal
 * - Redireciona para as opera√ß√µes apropriadas
 * - Mant√©m interface consistente entre modos
 * 
 * Onde √© usado:
 * - Componentes que precisam criar leads independente do tipo de usu√°rio
 * - Modals e forms de cria√ß√£o de leads
 * 
 * Como se conecta:
 * - useAdminCheck para detectar privil√©gios
 * - useAdminClinicOperations para opera√ß√µes admin
 * - useClinicaOperations para opera√ß√µes normais
 */
export const useAdminLeadOperations = (targetClinicaId?: string) => {
  const { isAdmin } = useAdminCheck();
  const adminOps = useAdminClinicOperations();
  const normalOps = useClinicaOperations();

  // Fun√ß√£o unificada para criar lead
  const createLead = async (leadData: any) => {
    console.log('üîÑ [useAdminLeadOperations] Criando lead. Admin:', isAdmin, 'Target Clinic:', targetClinicaId);
    
    if (isAdmin && targetClinicaId) {
      // Admin criando lead para cl√≠nica espec√≠fica
      return adminOps.createLeadForClinic({
        ...leadData,
        clinica_id: targetClinicaId
      });
    } else {
      // Usu√°rio normal criando lead para sua pr√≥pria cl√≠nica
      return normalOps.createLead(leadData);
    }
  };

  const isCreatingLead = isAdmin && targetClinicaId 
    ? adminOps.isCreatingLead 
    : normalOps.isCreatingLead;

  return {
    createLead,
    isCreatingLead,
    isAdmin,
    targetClinicaId
  };
};
